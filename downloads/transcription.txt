
Speaker 0: Hello. My name is Stan la Ba, and I am from Portal Portugal, and I'm a recent mechanical engineer in graduate. As a final project to Cs present to you luke allocation. This was created specifically as a final project for Cs fifties introduction to programming with Python. This program's focus is to scan a given location and output a number of attractions or establishments specified by the user.

A real world simulation would be, for example, let's say you are walking by Berlin, and you want to get a place to stay for. You can use this program to tailor your preferences and get the top results. So you want the five best lodging places in berlin in a thirty kilometer radius, sorted by number of reviews. Or let's say, you aren't really sure which one to see. So you want to see what you can choose from.

Perfect. You open up this program where you prompted with simple questions like your desired location. Your desired radius of search and desired type of attraction. If you don't know what exactly which you're looking for, there's always the option to leave the line blank or type the word attractions to see a table of available options. As a bonus, if you're feeling extra and indecisive, you can just input the word random and the random option will be chosen for you.

The program will output the number of fund results and prompt for how many of those results you want to see. Then it will prompt for a sorting filter. You can choose between name, rating and number of reviews. In the case that you don't want to choose a specific filter, the default is number of reviews. And then you will get your desired output outputs in this case.

Five lodging places or five hotels in Berlin in the thirty kilometer radius that you specified sorted by number of reviews. And then finally, the program asks you if you want to do another search, where you can choose between yes or no. If choosing yes, the program simply restarts. Whilst no just exits the program. And I just want to say thank you to everyone involved in the making of this course.

It was really probably the best introduction to Python I could have asked for and thank you for watching. Yeah. Deep. Okay. Thousand.